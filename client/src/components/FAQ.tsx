import React, { useState } from 'react';
import { ChevronDown, ChevronUp } from 'lucide-react';

const FAQ: React.FC = () => {
  const [openIndex, setOpenIndex] = useState<number | null>(null);

  const faqs = [
    {
      question: "How can GitDocify improve my GitHub profile to attract recruiters and stand out?",
      answer: "GitDocify creates professional, comprehensive documentation that showcases your projects in the best light. Well-documented repositories demonstrate your professionalism and attention to detail, making your GitHub profile more attractive to potential employers and collaborators."
    },
    {
      question: "How long does it take to generate a high-quality README with GitDocify?",
      answer: "GitDocify can generate a comprehensive README file in under 30 seconds. Our AI analyzes your codebase, understands the project structure, and creates detailed documentation including installation instructions, usage examples, and feature descriptions."
    },
    {
      question: "Is my code protected and secure when using GitDocify?",
      answer: "Absolutely. We take security seriously. Your code is processed securely, never stored permanently, and we follow industry-standard encryption practices. We only analyze the necessary parts of your code to generate documentation."
    },
    {
      question: "Can I customize the layout and style of my README generated by GitDocify?",
      answer: "Yes! GitDocify offers multiple templates and customization options. You can choose from various layouts, color schemes, and sections to match your project's style and branding requirements."
    },
    {
      question: "Which programming languages does GitDocify support?",
      answer: "GitDocify supports virtually all programming languages including Python, JavaScript, TypeScript, Java, C++, Go, Rust, PHP, Ruby, and many more. Our AI is trained to understand the nuances of different languages and frameworks."
    },
    {
      question: "How does GitDocify AI analyze and review my code to create documentation?",
      answer: "Our AI uses advanced natural language processing and code analysis techniques to understand your codebase structure, identify key functions and classes, analyze dependencies, and generate human-readable documentation that accurately reflects your project's functionality."
    }
  ];

  const toggleFAQ = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <section id="faq" className="py-20 bg-gray-50">
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            Questions? Look here.
          </h2>
          <p className="text-xl text-gray-600">
            Everything you need to know about GitDocify
          </p>
        </div>

        <div className="space-y-4">
          {faqs.map((faq, index) => (
            <div
              key={index}
              className="bg-white rounded-lg shadow-sm border hover:shadow-md transition-shadow"
            >
              <button
                className="w-full px-6 py-4 text-left flex justify-between items-center"
                onClick={() => toggleFAQ(index)}
              >
                <span className="text-lg font-semibold text-gray-900 pr-4">
                  {faq.question}
                </span>
                {openIndex === index ? (
                  <ChevronUp className="w-5 h-5 text-gray-500 flex-shrink-0" />
                ) : (
                  <ChevronDown className="w-5 h-5 text-gray-500 flex-shrink-0" />
                )}
              </button>
              
              {openIndex === index && (
                <div className="px-6 pb-4">
                  <p className="text-gray-600 leading-relaxed">
                    {faq.answer}
                  </p>
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default FAQ;